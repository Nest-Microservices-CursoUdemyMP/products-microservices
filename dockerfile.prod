
# Dependencias - Construyo una "maquina virtual" con todas la dependencias (node-modules)
FROM node:23-alpine3.20 as deps

WORKDIR /usr/src/app

COPY package.json ./
COPY package-lock.json ./

RUN npm install




# Builder - Construye la aplicacion
FROM node:23-alpine3.20 as build

WORKDIR /usr/src/app

# Copiar de deps los modules de node
COPY --from=deps /usr/src/app/node_modules ./node_modules

# Copiar todo el codigo fuente de la aplicacion excepto lo definido en dockerignore
COPY . .

# Crea la carpeta de distribucion
RUN npm run build

# Limpiar todos los modulos de node que no se utilicen en produccion para reducir el archivo
RUN npm ci -f --only=production && npm cache clean --force

# Generar cliente de prisma y lo almacena en los modulos de node
RUN npx prisma generate




# Crear la imagen final de Docker
FROM node:23-alpine3.20 as prod

WORKDIR /usr/src/app

# Copiar los modulos de node de la etapa anterior
COPY --from=build /usr/src/app/node_modules ./node_modules

# Copiar la carpeta de distribucion (DIST)
COPY --from=build /usr/src/app/dist ./dist

# Copiar la carpeta de prisma
COPY --from=build /usr/src/app/prisma ./prisma

# Crea una variable de entorno indicando que la imagen es de produccion
ENV NODE_ENV=production

# Se crea un usuario para que ejecute las instrucciones siguientes
USER node

# Exposicion de puertos
EXPOSE 3000

# Ejecuta la aplicacion
CMD [ "node", "dist/main.js" ]


